INSN_DATA_MEMORY:
0b00000000000000010010000010000011
0b00000000010100100000000110110011
0b01000000101000110000001010110011
0b00000000100100111000001101100011
0b00000000001000011000001100110011
0b01000000101000110000001010110011

REGFILE:
x0: 0b00000000000000000000000000000000
x1: 0b00000000000000000000000000000010
x2: 0b00000000000000000000000000000000
x3: 0b00000000000000000000000001000000
x4: 0b00000000000000000000000000001010
x5: 0b00000000000000000000000000001000
x6: 0b00000000000000000000000000001110
x7: 0b00000000000000000000000001001100
x8: 0b00000000000000000000000001100100
x9: 0b00000000000000000000000001001100
x10: 0b00000000000000000000000000011000
x11: 0b00000000000000000000000000000100
x12: 0b00000000000000000000000000000010
x13: 0b00000000000000000000000000000110
x14: 0b00000000000000000000000000000010
x15: 0b00000000000000000000000000000101
x16: 0b00000000000000000000000000110101
x17: 0b00000000000000000000000000111111
x18: 0b00000000000000000000000000011011
x19: 0b00000000000000000000000000101111
x20: 0b00000000000000000000000001000000
x21: 0b00000000000000000000000001011110
x22: 0b00000000000000000000000000011011
x23: 0b00000000000000000000000000011010
x24: 0b00000000000000000000000000100111
x25: 0b00000000000000000000000000000011
x26: 0b00000000000000000000000000000011
x27: 0b00000000000000000000000000000000
x28: 0b00000000000000000000000001010100
x29: 0b00000000000000000000000000011000
x30: 0b00000000000000000000000001010101
x31: 0b00000000000000000000000000000011

--------------------------------------------------------
PC = 0
cycle = 0

FETCH_REG:     0b00000000000000010010000010000011

DECODE_REG:
RS1:           0b00000101
RS2:           0b00000010
RS1_val:       0b00000000000000000000000000001000
RS2_val:       0b00000000
imm1:          0b0000001101000010
imm2:          0b00000000000000000000000000000000
RD:            0b00010010

EXECUTE_REG: 
CU_signals:
  WB_WE:       0
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    0
  conditional: 0
RS2_val:       0b00000000000000000000000000000000
ALUresult:     0b00000000000000000000000000000000
RD:            0b00000000

MEMORY_REG: 
CU_signals:
  WB_WE:       0
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    0
  conditional: 0
mux_result:    0b00000000000000010010000010000011
RD:            0b00000000

--------------------------------------------------------
PC = 1
cycle = 1

FETCH_REG:     0b00000000010100100000000110110011

LOAD

DECODE_REG:
RS1:           0b00000010
RS2:           0b00000000
RS1_val:       0b00000000000000000000000000000000
RS2_val:       0b00000000
imm1:          0b0000000000000000
imm2:          0b00000000000000000000000000000000
RD:            0b00000001

EXECUTE_REG: 
CU_signals:
  WB_WE:       0
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    0
  conditional: 0
RS2_val:       0b00000000000000000000000000000000
ALUresult:     0b00000000000000000000000000001000
RD:            0b00010010

MEMORY_REG: 
CU_signals:
  WB_WE:       0
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    0
  conditional: 0
mux_result:    0b00000000000000010010000010000011
RD:            0b00000000

--------------------------------------------------------
PC = 2
cycle = 2

FETCH_REG:     0b01000000101000110000001010110011

ADD

DECODE_REG:
RS1:           0b00000100
RS2:           0b00000101
RS1_val:       0b00000000000000000000000000001010
RS2_val:       0b00001000
imm1:          0b0000000000000101
imm2:          0b00000000000000000000000000000000
RD:            0b00000011

EXECUTE_REG: 
CU_signals:
  WB_WE:       1
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     01
  mux_mem1:    0
  conditional: 0
RS2_val:       0b00000000000000000000000000000000
ALUresult:     0b00000000000000000000000000000000
RD:            0b00000001

MEMORY_REG: 
CU_signals:
  WB_WE:       0
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    0
  conditional: 0
mux_result:    0b00100000001110100100010000001010
RD:            0b00010010

--------------------------------------------------------
PC = 3
cycle = 3

FETCH_REG:     0b00000000100100111000001101100011

SUB

DECODE_REG:
RS1:           0b00000110
RS2:           0b00001010
RS1_val:       0b00000000000000000000000000001110
RS2_val:       0b00011000
imm1:          0b0000010000001010
imm2:          0b00000000000000000000000000000000
RD:            0b00000101

EXECUTE_REG: 
CU_signals:
  WB_WE:       1
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    1
  conditional: 0
RS2_val:       0b00000000000000000000000000001000
ALUresult:     0b00000000000000000000000000010010
RD:            0b00000011

MEMORY_REG: 
CU_signals:
  WB_WE:       1
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     01
  mux_mem1:    0
  conditional: 0
mux_result:    0b00000000000000010010000010000011
RD:            0b00000001

--------------------------------------------------------
PC = 4
cycle = 4

FETCH_REG:     0b00000000001000011000001100110011

BRANCH

DECODE_REG:
RS1:           0b00000111
RS2:           0b00001001
RS1_val:       0b00000000000000000000000001001100
RS2_val:       0b01001100
imm1:          0b0000000000001001
imm2:          0b00000000000000000000000000000000
RD:            0b00000110

EXECUTE_REG: 
CU_signals:
  WB_WE:       1
  MEM_WE:      0
  AluOp:       01
  mux_ex1:     00
  mux_mem1:    1
  conditional: 0
RS2_val:       0b00000000000000000000000000011000
ALUresult:     0b11111111111111111111111111110110
RD:            0b00000101

MEMORY_REG: 
CU_signals:
  WB_WE:       1
  MEM_WE:      0
  AluOp:       00
  mux_ex1:     00
  mux_mem1:    1
  conditional: 0
mux_result:    0b00000000000000000000000000010010
RD:            0b00000011

[reg]: 00000001 -> 00000000000000010010000010000011

